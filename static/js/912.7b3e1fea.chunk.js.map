{"version":3,"file":"static/js/912.7b3e1fea.chunk.js","mappings":"qKAKA,MAAMA,EAA8BC,IAAK,CACrCC,OAAQD,EAAME,KAAKD,SAGVE,EAAyBC,IAClC,MAAMC,UAA0BC,EAAAA,UAC5BC,MAAAA,GACI,OAAKC,KAAKC,MAAMR,QACTS,EAAAA,EAAAA,KAACN,EAAgB,IAAKI,KAAKC,SADHC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,UAEhD,EAGJ,OAAOC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAQf,GAAhBc,CAA6CR,EAAkB,C,+DChB1E,QAA0B,yBAA1B,EAA+F,8BAA/F,EAAsI,wBAAtI,EAAuK,wBAAvK,EAA0M,0B,sBCgB1M,QAbkBI,IACd,IAAIM,EAAO,WAAaN,EAAMO,GAG9B,OACIN,EAAAA,EAAAA,KAAA,OAAKO,UAAW,GAAGC,KAAYA,IAAWC,UACtCT,EAAAA,EAAAA,KAACU,EAAAA,GAAO,CAACR,GAAIG,EAAKI,SAAEV,EAAMY,QAExB,ECPRC,EAAWb,IACNC,EAAAA,EAAAA,KAAA,OAAKO,UAAWC,EAASC,SAAEV,EAAMc,UAgD5C,EA7CiBd,IAEb,IAAIT,EAAQS,EAAMe,YAEdC,EAAkBzB,EAAM0B,QAAQC,KAAKC,IACrClB,EAAAA,EAAAA,KAACmB,EAAU,CAAYR,KAAMO,EAAEP,KAAML,GAAIY,EAAEZ,IAA1BY,EAAEZ,MAGnBc,EAAmB9B,EAAM+B,SAASJ,KAAKK,IACvCtB,EAAAA,EAAAA,KAACY,EAAO,CAAYC,QAASS,EAAET,SAAjBS,EAAEhB,MAGhBiB,EAAiBjC,EAAMiC,eAW3B,OAAKxB,EAAMR,QAGPiC,EAAAA,EAAAA,MAAA,OAAKjB,UAAWC,EAAUC,SAAA,EACtBT,EAAAA,EAAAA,KAAA,OAAKO,UAAWC,EAAeC,SAAEM,KACjCf,EAAAA,EAAAA,KAAA,OAAKO,UAAWC,EAAWC,SAAEW,KAC7BI,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACIT,EAAAA,EAAAA,KAAA,OAAAS,UACIT,EAAAA,EAAAA,KAAA,YACIyB,MAAOF,EACPG,SAfMC,IACtB,IAAIC,EAAOD,EAAEE,OAAOJ,MACpB1B,EAAM+B,qBAAsBF,EAAK,EAcjBG,YAAY,0BAGpB/B,EAAAA,EAAAA,KAAA,OAAAS,UACIT,EAAAA,EAAAA,KAAA,UAAQgC,QAxBCC,KACrBlC,EAAMmC,aAAa,EAuB6BzB,SAAC,kBAf3BT,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,UAkB7B,E,+BCpCd,MAAMiC,EAAqB,CACvBL,qBAAsBM,EAAAA,GACtBF,YAAaG,EAAAA,IAIjB,GAAelC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAXmBd,IAAK,CACxBwB,YAAaxB,EAAMwB,eAUMqB,GACzB1C,EAAAA,EAFJ,CAGE6C,E","sources":["Components/Hoc/withAuthRedirect.js","webpack://boje-react/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const AuthRedirectComponent = (WrappedComponent) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n            return <WrappedComponent {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return compose(connect(mapStateToPropsForRedirect))(RedirectComponent);\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__xGy88\",\"item\":\"Dialogs_item__XGkM0\",\"dialogsItems\":\"Dialogs_dialogsItems__FD317\",\"dialog\":\"Dialogs_dialog__pk3ll\",\"active\":\"Dialogs_active__EkV05\",\"messages\":\"Dialogs_messages__3x0pC\"};","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nlet DialogItem = (props) => {\n    let path = \"dialogs/\" + props.id;\n\n\n    return (\n        <div className={`${s.dialog} ${s.active}`}>\n            <NavLink to={path}>{props.name}</NavLink>\n            {}\n        </div>\n    );\n};\n\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport { Navigate } from \"react-router-dom\";\n\nconst Message = (props) => {\n    return <div className={s.dialog}>{props.message}</div>;\n};\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map((d) => (\n        <DialogItem key={d.id} name={d.name} id={d.id} />\n    ));\n\n    let messagesElements = state.messages.map((m) => (\n        <Message key={m.id} message={m.message} />\n    ));\n\n    let newMessageBody = state.newMessageBody;\n\n    let onSendMessageClick = () => {\n        props.sendMessage();\n    };\n\n    let onNewMessageChange = (e) => {\n        let body = e.target.value;\n        props.updateNewMessageBody (body)\n    };\n\n    if (!props.isAuth) return <Navigate to=\"/login\" />;\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>{dialogsElements}</div>\n            <div className={s.messages}>{messagesElements}</div>\n            <div>\n                <div>\n                    <textarea\n                        value={newMessageBody}\n                        onChange={onNewMessageChange}\n                        placeholder=\"Enter your message\"\n                    ></textarea>\n                </div>\n                <div>\n                    <button onClick={onSendMessageClick}>Send</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport {\n    sendMessageCreator,\n    updateNewMessageBodyCreator\n} from \"../../redux/dialog-reducer\";\nimport { compose } from \"redux\";\nimport { AuthRedirectComponent } from \"../Hoc/withAuthRedirect\";\n\nlet mapStateToProps = (state) => ({\n    dialogsPage: state.dialogsPage,\n});\n\nconst mapDispatchToProps = {\n    updateNewMessageBody: updateNewMessageBodyCreator,\n    sendMessage: sendMessageCreator,\n};\n\n// Используем compose для наглядности и удобства\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    AuthRedirectComponent\n)(Dialogs);\n\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","AuthRedirectComponent","WrappedComponent","RedirectComponent","React","render","this","props","_jsx","Navigate","to","compose","connect","path","id","className","s","children","NavLink","name","Message","message","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","newMessageBody","_jsxs","value","onChange","e","body","target","updateNewMessageBody","placeholder","onClick","onSendMessageClick","sendMessage","mapDispatchToProps","updateNewMessageBodyCreator","sendMessageCreator","Dialogs"],"sourceRoot":""}
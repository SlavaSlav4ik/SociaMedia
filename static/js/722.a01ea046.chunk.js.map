{"version":3,"file":"static/js/722.a01ea046.chunk.js","mappings":"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","sources":["Components/Hoc/withAuthRedirect.js","webpack://boje-react/./src/Components/Users/User.module.css?abcc","Components/Users/Users.jsx","redux/users-selectors.js","Components/Users/UsersContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const AuthRedirectComponent = (WrappedComponent) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n            return <WrappedComponent {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return compose(connect(mapStateToPropsForRedirect))(RedirectComponent);\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"User_selectedPage__a1Fiu\"};","import React, { useState } from \"react\";\r\nimport styles from \"./User.module.css\";\r\nimport userPhoto from \"../../assets/images/47d45103406b3b1a2a873981694e844b.jpg\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Users = (props) => {\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const pagesPerBlock = 10;\r\n    const totalBlocks = Math.ceil(pagesCount / pagesPerBlock);\r\n\r\n    const [pageBlock, setPageBlock] = useState(1);\r\n    const startPage = (pageBlock - 1) * pagesPerBlock;\r\n    const endPage = startPage + pagesPerBlock;\r\n    const visiblePages = pages.slice(startPage, endPage);\r\n\r\n    const handlePrevBlock = () => {\r\n        if (pageBlock > 1) {\r\n            setPageBlock(pageBlock - 1);\r\n        }\r\n    };\r\n\r\n    const handleNextBlock = () => {\r\n        if (pageBlock < totalBlocks) {\r\n            setPageBlock(pageBlock + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            {props.users.map(u => (\r\n                <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={`/profile/${u.id}`}>\r\n                                <img\r\n                                    src={u.photos.small || userPhoto}\r\n                                    alt=\"avatar\"\r\n                                    style={{width: \"50px\", height: \"50px\", borderRadius: \"50%\"}}\r\n                                />\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed ? (\r\n                                <button\r\n                                    disabled={props.followingInProgress.includes(u.id)}\r\n                                    onClick={() => props.unfollow(u.id)}\r\n                                >\r\n                                    Unfollow\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    disabled={props.followingInProgress.includes(u.id)}\r\n                                    onClick={() => props.follow(u.id)}\r\n                                >\r\n                                    Follow\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                        <div>{'u.location?.country'}</div>\r\n                        <div>{'u.location?.city'}</div>\r\n                    </span>\r\n                </div>\r\n            ))}\r\n\r\n            <div>\r\n                <button onClick={handlePrevBlock} disabled={pageBlock === 1}>\r\n                    Назад\r\n                </button>\r\n\r\n                {visiblePages.map(p => (\r\n                    <span\r\n                        key={p}\r\n                        className={props.currentPage === p ? styles.selectedPage : \"\"}\r\n                        onClick={() => props.onPageChanged(p)}\r\n                        style={{margin: \"0 5px\", cursor: \"pointer\"}}\r\n                    >\r\n                        {p}\r\n                    </span>\r\n                ))}\r\n\r\n                <button onClick={handleNextBlock} disabled={pageBlock === totalBlocks}>\r\n                    Далее\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleFollowingProgress,\r\n    toggleIsFetching,\r\n    requestUsers\r\n} from \"../../redux/Users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport { AuthRedirectComponent } from \"../Hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n};\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching && <Preloader />}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    AuthRedirectComponent\r\n)(UsersContainer);\r\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","AuthRedirectComponent","WrappedComponent","RedirectComponent","React","render","this","props","_jsx","Navigate","to","compose","connect","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","totalBlocks","pageBlock","setPageBlock","useState","startPage","endPage","visiblePages","slice","_jsxs","children","users","map","u","NavLink","id","src","photos","small","userPhoto","alt","style","width","height","borderRadius","followed","disabled","followingInProgress","includes","onClick","unfollow","follow","name","status","handlePrevBlock","p","className","currentPage","styles","onPageChanged","margin","cursor","handleNextBlock","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","mapDispatchToProps","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","requestUsers","UsersContainer","constructor","arguments","pageNumber","componentDidMount","_Fragment","Preloader","Users"],"sourceRoot":""}
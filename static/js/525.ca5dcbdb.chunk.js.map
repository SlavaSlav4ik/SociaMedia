{"version":3,"file":"static/js/525.ca5dcbdb.chunk.js","mappings":"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","sources":["Components/Hoc/withAuthRedirect.js","webpack://boje-react/./src/Components/Profiile/Profile.module.css?9a15","Components/Profiile/ProfileInfo/ProfileInfo.module.css","Components/Profiile/ProfileInfo/ProfileStatus.jsx","Components/Profiile/ProfileInfo/ProfileInfo.jsx","webpack://boje-react/./src/Components/Profiile/MyPosts/Post/Post.module.css?d59a","Components/Profiile/MyPosts/Post/Post.jsx","webpack://boje-react/./src/Components/Profiile/MyPosts/Mypost.module.css?415f","Components/Profiile/MyPosts/Mypost.jsx","Components/Profiile/MyPosts/MyPostContainer.jsx","Components/Profiile/Profile.jsx","Components/Profiile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const AuthRedirectComponent = (WrappedComponent) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n            return <WrappedComponent {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return compose(connect(mapStateToPropsForRedirect))(RedirectComponent);\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__ifVdt\",\"item\":\"Profile_item__LnRDU\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__-xU39\"};","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    };\r\n\r\n    // Привязка контекста через стрелочную функцию\r\n    activateEditMode = () => {\r\n        this.setState({ editMode: true });\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({ editMode: false });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({ status: e.currentTarget.value });\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({ status: this.props.status });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>\r\n                            {this.props.status || \"-----\"}\r\n                        </span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input\r\n                            onChange={this.onStatusChange}\r\n                            autoFocus={true}\r\n                            onBlur={this.deactivateEditMode}\r\n                            value={this.state.status}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport ProfileStatus from \"./ProfileStatus\";\n\nlet ProfileInfo = (props) => {\n    return (\n        <div>\n            <div className={s.item}>\n                <img src=\"https://i.pinimg.com/736x/6f/02/d1/6f02d195addc466721dbc8ac60db1192.jpg\" />\n            </div>\n            <div className={s.descriptionBlock}>\n                <img src={props.profile.photos.large} />\n                <ProfileStatus\n                    status={props.status}\n                    updateStatus={props.updateStatus}\n                />\n                ava+description\n            </div>\n        </div>\n    );\n};\n\nexport default ProfileInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__MQrz8\"};","import React from \"react\";\nimport s from \"./Post.module.css\";\nlet Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img src=\"https://i.pinimg.com/736x/6c/b6/3c/6cb63c8a1e88b37f5c0fb73cbd776cc4.jpg\"/>\n            <div>{props.message}</div>\n            <span>like</span> {props.likesCount}\n        </div>\n    )\n}\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Mypost_content__K0lOr\",\"item\":\"Mypost_item__6WSmC\",\"postsBlock\":\"Mypost_postsBlock__7tuSG\",\"posts\":\"Mypost_posts__TBPVy\"};","import React, { useRef } from \"react\";\nimport Post from \"./Post/Post\";\nimport s from \"./Mypost.module.css\";\n\nconst MyPost = React.memo((props) => {\n    // Список постов\n    const postsElement = props.posts.map(p => (\n        <Post key={p.id} message={p.message} likesCount={p.likesCount} />\n    ));\n\n    // Реф для textarea\n    const newPostElement = useRef(null);\n\n    // Добавление поста\n    const onAddPost = () => {\n        props.addPost();\n    };\n\n    // Обновление текста\n    const onPostChange = () => {\n        const text = newPostElement.current.value;\n        props.updateNewPostText(text);\n    };\n\n    return (\n        <div className={s.content}>\n            <div className={s.postsBlock}>\n                <h3>My post</h3>\n            </div>\n            <div>\n        <textarea\n            onChange={onPostChange}\n            ref={newPostElement}\n            value={props.newPostText}\n            className={s.textarea}\n        />\n            </div>\n            <div>\n                <button onClick={onAddPost} className={s.button}>\n                    Add post\n                </button>\n            </div>\n            <div className={s.postsList}>{postsElement}</div>\n        </div>\n    );\n});\n\nexport default MyPost;\n","import React from \"react\";\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\nimport Mypost from \"./Mypost\";\nimport {connect} from \"react-redux\";\n\n\n\n\n\n\n// Создание библиотеки connect\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewPostText: (text) => {\n            let action = updateNewPostTextActionCreator(text);\n            dispatch(action);\n        },\n        addPost: () => {\n            dispatch(addPostActionCreator());\n        }\n    };\n};\n\n\n\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (Mypost)\n\n\nexport default MyPostsContainer","import React from \"react\";\nimport s from \"./Profile.module.css\"\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostContainer from \"./MyPosts/MyPostContainer\";\nimport Preloader from \"../Common/Preloader/Preloader\";\n\n\nconst  Profile = (props) => {\n    if (!props.profile) {\n        return  <Preloader/>\n    }\n    return (\n        <div>\n            <div className={s.item}>\n                <ProfileInfo profile = {props.profile}  status = {props.status} updateStatus = {props.updateStatus} />\n                <MyPostContainer/>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Profile","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {getStatus, getUsersProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport { useParams } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { AuthRedirectComponent } from \"../Hoc/withAuthRedirect\";\n\n// withRouter HOC для получения параметров из URL\nfunction withRouter(Component) {\n    return (props) => {\n        const match = { params: useParams() };\n        return <Component {...props} match={match} />;\n    };\n}\n\nclass ProfileContainer extends React.Component {\n    redirectToMainUser() {\n        let userId = this.props.match?.params?.userId;\n        if (!userId) userId = 32336;\n        this.props.getUsersProfile(userId);\n    }\n\n    componentDidMount() {\n        const userId = this.props.match?.params?.userId || 32336;\n        this.props.getUsersProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.redirectToMainUser();\n        }\n    }\n\n    render() {\n        return <Profile {...this.props} profile={this.props.profile} status = {this.props.status}\n                        updateStatus = {this.props.updateStatus} />;\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n});\n\n// Оборачиваем всё в compose\nexport default compose(\n    connect(mapStateToProps, { getUsersProfile, getStatus, updateStatus }),\n    withRouter,\n    AuthRedirectComponent\n)(ProfileContainer);\n\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","AuthRedirectComponent","WrappedComponent","RedirectComponent","React","render","this","props","_jsx","Navigate","to","compose","connect","ProfileStatus","constructor","arguments","editMode","status","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","componentDidUpdate","prevProps","_jsxs","children","onDoubleClick","onChange","autoFocus","onBlur","className","s","item","src","descriptionBlock","profile","photos","large","message","likesCount","postsElement","posts","map","p","Post","id","newPostElement","useRef","content","postsBlock","onPostChange","text","current","updateNewPostText","ref","newPostText","textarea","onClick","onAddPost","addPost","button","postsList","profilePage","dispatch","action","updateNewPostTextActionCreator","addPostActionCreator","Mypost","ProfileInfo","MyPostContainer","Preloader","ProfileContainer","redirectToMainUser","_this$props$match","_this$props$match$par","userId","match","params","getUsersProfile","componentDidMount","_this$props$match2","_this$props$match2$pa","getStatus","Profile","Component","useParams"],"sourceRoot":""}